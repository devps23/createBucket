* Grafana is one of the leading open-source tools for running application analytics,
visualizing metrics, and time-series data.
* To project the info(ec2 instance).
* Grafana offer their own grafana services
* Install grafana on local systems.
* grafana.com--->click on downloads--->in that document go to RedHat there click on yum package repository
under Install grafana "Supported Operating systems---->"Red Hat, RHEL, or Fedora---->click this link"
/etc/yum.repos.d/grafana.repo----copy this repo
any automation through operating system is ansible....
some packages not able to findout directly in the server so we need to use repo file.....
then grafana package can installed from repo ......
through automation:
create a repo file
Install grafana package
start service
 after this check grafana installation,service in linux once its running as expected...
 then "netstat -lntp" get the port number

 find default username and password default username/password is admin/admin--->click on login
 will see a grafana dashboard
 leftside-->Go to the connections-->DataSource--->Add Data Source
 click on Prometheus(data is inside prometheus ,and project this prometheus data in grafana dashboard)
prometheus server URL:http://172.0.0.0:9090(prometheus private ip address)

* click on dashboards--->create dashboard--->Import dashboards-->Enter Node_exporter port number 1860--->click on Load
choose prometheus by default (At last) and click
will see a node_exporter full dashboard(default creation)

most of the times create dashboard with our data....

* click dashboards--->create dashboards---->Add Visualisation----->select data source as "prometheus--->
at down click on code and enter up query"(project prometheus data on grafana dashboard)
1---means server up
0---means server down
change appearence according to the grafana dashboard

search "Goldern signals google sre"--->satuaration (monitor performance of cpu,instance storage,.....)
search public grafana dashboards(Node exporter full)

epochconverter.com---->convert to time format
scalar is a one dimensional data
vector is a two dimensional data
prometheus data is always a vector
Instant Vector: instances(node/device) monitor on prometheus.
Range Vector:up[2m](timeseries range) last two minutes instances monitor on prometheus. it will display in 1@1711416.....
to convert this number(1@1711416.....) to time series format "epochconverter.com"
In prometheus dashboard
"enter zero" --->click on execute .displays scalar(a simple numeric floating point value)
"enter string"---->click on execute displays string(a simple string value; currently unused)
String Literals:
promql supports literals.
'these are unescaped: \n \\ \t', result is \
'these are unescaped: \\n \\ \\t',result is \n\\t

Instant vector:
up({name="backend"})-----filter the backend instance
up({name!="backend"})
up({name=~"back.*"})-----> start represents single char, where as dot represents multi char
up offset 5m ---->last 5 mins instances on monitor
node_cpu_seconds_total
ceil(node_cpu_seconds_total) ---upside value
floor(node_cpu_seconds_total)---downside value

